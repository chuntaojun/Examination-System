<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tensor.org.dao.mapper.user.UserVOMapper">
    <resultMap id="UserResultMap" type="com.tensor.org.api.dao.enpity.user.UserVO">
        <id column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="head_image_url" jdbcType="VARCHAR" property="headImageUrl"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="register_date" jdbcType="DATE" property="registerDate"/>
        <result column="role_type" property="roles" />
    </resultMap>
    <!--根据登陆信息获取对应的用户信息-->
    <select id="findOneUserVO" resultMap="UserResultMap">
      select u.*, r.role_type from user_account u left join user_link_role r on u.user_id=r.user_id where phone = #{login} or email = #{login}
    </select>

    <!--获取所有的账户-->
    <select id="findAllUserVO" resultMap="UserResultMap">

    </select>

    <!--新增用户账户信息-->
    <insert id="saveUserVO">
        insert into
          user_account(user_id, nick_name, head_image_url, email, phone, password, register_date)
        value (
          #{userVO.userId},
          #{userVO.nickName},
          #{userVO.headImageUrl},
          #{userVO.email},
          #{userVO.phone},
          #{userVO.password},
          #{userVO.registerDate}
        )
    </insert>

    <!--用户信息更新-->
    <update id="updateUserVOSelective" parameterType="com.tensor.org.api.dao.enpity.user.UserVO">
        update user_account
        <set>
            <if test="nickName != null and nickName != ''">
                nick_name = #{nickName}
            </if>
            <if test="headImageUrl != null and headImageUrl != ''">
                head_image_url = #{headImageUrl}
            </if>
            <if test="password != null and password != ''">
                password = #{password}
            </if>
        </set>
        where user_id = #{userId}
    </update>

    <!--删除用户账户-->
    <delete id="deleteUserVO">
        delete from user_account where user_id = #{userId}
    </delete>

</mapper>