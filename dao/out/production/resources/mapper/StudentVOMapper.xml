<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tensor.org.dao.mapper.user.StudentVOMapper">
    <resultMap id="BaseResultMap" type="com.tensor.org.api.dao.enpity.user.StudentVO">
        <id column="student_no" jdbcType="VARCHAR" property="studentNo"/>
        <result column="student_real_name" jdbcType="VARCHAR" property="studentRealName"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
    </resultMap>

    <!--根据学生编号查找该学生账户-->
    <select id="findOneStudentVO" resultType="com.tensor.org.api.dao.enpity.user.StudentVO">
        select * from student s left join user_account u on s.user_id = u.user_id where s.student_no = #{studentNo};
    </select>

    <!--根据组织编号查询属于该组织的所有学生信息-->
    <select id="findAllByOrgId" resultType="com.tensor.org.api.dao.enpity.user.StudentVO">
        select * from student where student_no in (select student_no from org_link_stu where org_id = #{orgId});
    </select>

    <!--删除学生与组织的关系-->
    <delete id="deleteStuBelongOrg">
        delete from org_link_stu where org_id = #{orgId} and student_no = #{studentNo}
    </delete>

    <!--新建立学生与组织的关系-->
    <insert id="saveStuBelongOrg">
        insert into
          org_link_stu(org_id, student_no, join_date, quit_date)
        values (
          #{orgLinkStu.orgId},
          #{orgLinkStu.studentNo},
          #{orgLinkStu.joinDate},
          #{orgLinkStu.quitDate}
          )
    </insert>

</mapper>