logging.level.org.springframework.web=debug
logging.level.com.tensor.org.web=debug
logging.pattern.console=%d-%thread-%logger{36}-%msg%n
logging.path=/Volumes/resources/wechat_log/dubbo_cloud/work
spring.output.ansi.enabled=always

# SpringBoot kafka 生产者配置
spring.kafka.bootstrap-servers=192.168.31.217:9092
spring.kafka.producer.acks=all
spring.kafka.producer.retries=0
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.compression-type=gzip
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.kafka.consumer.group-id=1

# Dubbo 设置
dubbo.scan.basePackages=com.tensor.org.work.api

# Dubbo Config properties
dubbo.application.id = dubbo-provider-work
dubbo.application.name = dubbo-provider-work

dubbo.consumer.check=false

dubbo.provider.filter=tracing
dubbo.consumer.filter=tracing

## ProtocolConfig Bean
dubbo.protocol.id = dubbo
dubbo.protocol.name = dubbo
dubbo.protocol.port = 20883

## RegistryConfig Bean
dubbo.registry.id = my-registry
dubbo.registry.address=nacos://127.0.0.1:8848

spring.application.name=provider-work

# 自定义配置
# kafka topic定义
kafka.consumer.topic.notice=kafka-topic-notice

